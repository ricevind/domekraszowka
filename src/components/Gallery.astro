---
import type { ImageMetadata } from "astro";
import { Image } from "astro:assets";

const images = import.meta.glob<{ default: ImageMetadata }>(
  "/src/images/gallery/*.{jpeg,jpg,png,gif}"
);
const maxImagesLength = Object.keys(images).length;
const nextIndex = (index: number) => (index + 1) % maxImagesLength;
const prevIndex = (index: number) =>
  (index - 1 + maxImagesLength) % maxImagesLength;
---

<ul>
  {
    Object.entries(images).map(([path, image], index) => (
      <li>
        <a href={`#image-${index}`}>
          <Image src={image()} alt="" quality={40} width={300} height={300} />
        </a>
      </li>
    ))
  }
</ul>
{
  Object.entries(images).map(([path, image], index) => (
    <div class="lightbox">
      <a class="prev glass" href={`#image-${prevIndex(index)}`} class="prev">
        <span>&lt;</span>
      </a>
      <a class="next glass" href={`#image-${nextIndex(index)}`} class="next">
        <span>&gt;</span>
      </a>

      <a href={`#-${index}`} class="lightbox-a" id={`image-${index}`}>
        <Image src={image()} alt="" loading="eager" />
      </a>
    </div>
  ))
}

<script>
  document.addEventListener("keydown", (event) => {
    if (event.key === "Escape") {
      const lightbox = document.querySelector(".lightbox-a:target");
      if (lightbox && lightbox instanceof HTMLAnchorElement) {
        lightbox.click();
      }
    }

    if (event.key === "ArrowLeft") {
      const prev = document.querySelector(".lightbox:has(:target) .prev");
      if (prev && prev instanceof HTMLAnchorElement) {
        prev.click();
      }
    }

    if (event.key === "ArrowRight") {
      const next = document.querySelector(".lightbox:has(:target) .next");
      if (next && next instanceof HTMLAnchorElement) {
        next.click();
      }
    }
  });
</script>
